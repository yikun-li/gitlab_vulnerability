"""Create SecurityReport foreignkeys

Revision ID: 4e30661f98f0
Revises: b25b114c09a4
Create Date: 2024-05-21 18:51:54.686416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4e30661f98f0'
down_revision: Union[str, None] = 'b25b114c09a4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(op.f('fk_analyzers_vendor_id_vendors'), 'analyzers', 'vendors', ['vendor_id'], ['id'])
    op.create_foreign_key(op.f('fk_communications_scan_id_scans'), 'communications', 'scans', ['scan_id'], ['id'])
    op.create_foreign_key(op.f('fk_configuration_options_scan_id_scans'), 'configuration_options', 'scans', ['scan_id'], ['id'])
    op.create_foreign_key(op.f('fk_cvss_vectors_vendor_name_vendors'), 'cvss_vectors', 'vendors', ['vendor_name'], ['name'])
    op.create_foreign_key(op.f('fk_flags_vulnerability_id_vulnerabilities'), 'flags', 'vulnerabilities', ['vulnerability_id'], ['id'])
    op.create_foreign_key(op.f('fk_identifiers_scan_id_scans'), 'identifiers', 'scans', ['scan_id'], ['id'])
    op.create_foreign_key(op.f('fk_locations_vulnerability_id_vulnerabilities'), 'locations', 'vulnerabilities', ['vulnerability_id'], ['id'])
    op.create_foreign_key(op.f('fk_remediations_security_report_id_security_reports'), 'remediations', 'security_reports', ['security_report_id'], ['id'])
    op.create_foreign_key(op.f('fk_scanners_vendor_id_vendors'), 'scanners', 'vendors', ['vendor_id'], ['id'])
    op.create_foreign_key(op.f('fk_scans_scanner_id_scanners'), 'scans', 'scanners', ['scanner_id'], ['id'])
    op.create_foreign_key(op.f('fk_scans_analyzer_id_analyzers'), 'scans', 'analyzers', ['analyzer_id'], ['id'])
    op.create_foreign_key(op.f('fk_scans_security_report_id_security_reports'), 'scans', 'security_reports', ['security_report_id'], ['id'])
    op.create_foreign_key(op.f('fk_security_reports_job_id_jobs'), 'security_reports', 'jobs', ['job_id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerabilities_security_report_id_security_reports'), 'vulnerabilities', 'security_reports', ['security_report_id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerability_cvss_vector_association_cvss_vectors_id_cvss_vectors'), 'vulnerability_cvss_vector_association', 'cvss_vectors', ['cvss_vectors_id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerability_cvss_vector_association_vulnerabilities_id_vulnerabilities'), 'vulnerability_cvss_vector_association', 'vulnerabilities', ['vulnerabilities_id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerability_identifier_association_vulnerabilities_id_vulnerabilities'), 'vulnerability_identifier_association', 'vulnerabilities', ['vulnerabilities_id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerability_identifier_association_identifiers_id_identifiers'), 'vulnerability_identifier_association', 'identifiers', ['identifiers_id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerability_identifiers_id_vulnerabilities'), 'vulnerability_identifiers', 'vulnerabilities', ['id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerability_identifiers_remediation_id_remediations'), 'vulnerability_identifiers', 'remediations', ['remediation_id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerability_link_association_vulnerabilities_id_vulnerabilities'), 'vulnerability_link_association', 'vulnerabilities', ['vulnerabilities_id'], ['id'])
    op.create_foreign_key(op.f('fk_vulnerability_link_association_links_id_links'), 'vulnerability_link_association', 'links', ['links_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_vulnerability_link_association_links_id_links'), 'vulnerability_link_association', type_='foreignkey')
    op.drop_constraint(op.f('fk_vulnerability_link_association_vulnerabilities_id_vulnerabilities'), 'vulnerability_link_association', type_='foreignkey')
    op.drop_constraint(op.f('fk_vulnerability_identifiers_remediation_id_remediations'), 'vulnerability_identifiers', type_='foreignkey')
    op.drop_constraint(op.f('fk_vulnerability_identifiers_id_vulnerabilities'), 'vulnerability_identifiers', type_='foreignkey')
    op.drop_constraint(op.f('fk_vulnerability_identifier_association_identifiers_id_identifiers'), 'vulnerability_identifier_association', type_='foreignkey')
    op.drop_constraint(op.f('fk_vulnerability_identifier_association_vulnerabilities_id_vulnerabilities'), 'vulnerability_identifier_association', type_='foreignkey')
    op.drop_constraint(op.f('fk_vulnerability_cvss_vector_association_vulnerabilities_id_vulnerabilities'), 'vulnerability_cvss_vector_association', type_='foreignkey')
    op.drop_constraint(op.f('fk_vulnerability_cvss_vector_association_cvss_vectors_id_cvss_vectors'), 'vulnerability_cvss_vector_association', type_='foreignkey')
    op.drop_constraint(op.f('fk_vulnerabilities_security_report_id_security_reports'), 'vulnerabilities', type_='foreignkey')
    op.drop_constraint(op.f('fk_security_reports_job_id_jobs'), 'security_reports', type_='foreignkey')
    op.drop_constraint(op.f('fk_scans_security_report_id_security_reports'), 'scans', type_='foreignkey')
    op.drop_constraint(op.f('fk_scans_analyzer_id_analyzers'), 'scans', type_='foreignkey')
    op.drop_constraint(op.f('fk_scans_scanner_id_scanners'), 'scans', type_='foreignkey')
    op.drop_constraint(op.f('fk_scanners_vendor_id_vendors'), 'scanners', type_='foreignkey')
    op.drop_constraint(op.f('fk_remediations_security_report_id_security_reports'), 'remediations', type_='foreignkey')
    op.drop_constraint(op.f('fk_locations_vulnerability_id_vulnerabilities'), 'locations', type_='foreignkey')
    op.drop_constraint(op.f('fk_identifiers_scan_id_scans'), 'identifiers', type_='foreignkey')
    op.drop_constraint(op.f('fk_flags_vulnerability_id_vulnerabilities'), 'flags', type_='foreignkey')
    op.drop_constraint(op.f('fk_cvss_vectors_vendor_name_vendors'), 'cvss_vectors', type_='foreignkey')
    op.drop_constraint(op.f('fk_configuration_options_scan_id_scans'), 'configuration_options', type_='foreignkey')
    op.drop_constraint(op.f('fk_communications_scan_id_scans'), 'communications', type_='foreignkey')
    op.drop_constraint(op.f('fk_analyzers_vendor_id_vendors'), 'analyzers', type_='foreignkey')
    # ### end Alembic commands ###
