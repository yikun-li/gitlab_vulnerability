from typing import Optional
from uuid import UUID
from datetime import datetime
from pydantic import Field

from app.database.schemas import report_base as base
from app.database.schemas.detection import Job


class Communication(base.Communication):
    id: UUID
    scan_id: Optional[UUID]
    scan: Optional[base.Scan]


class ConfigurationOption(base.ConfigurationOption):
    id: UUID
    scan_id: Optional[UUID]
    scan: Optional[base.Scan]


class Vendor(base.Vendor):
    id: UUID
    analyzers: Optional[list[base.Analyzer]]
    scanners: Optional[list[base.Scanner]]
    cvss_vectors: Optional[list[base.Scanner]]


class Analyzer(base.Analyzer):
    vendor_id: UUID
    scans: Optional[list[base.Scan]]


class Scanner(base.Scanner):
    vendor_id: UUID
    scans: Optional[list[base.Scan]]


class Identifier(base.Identifier):
    id: UUID
    vulnerability: Optional[list[base.Vulnerability]]
    scan_id: Optional[UUID]
    scan: Optional[base.Scan]


class CVSSVector(base.CVSSVector):
    id: UUID
    vendor: base.Vendor
    vendor_name: str = Field(alias="vendor_name")
    vulnerabilities: Optional[list[base.Vulnerability]]


class Link(base.Link):
    id: UUID
    vulnerabilities: Optional[list[base.Vulnerability]]


class Location(base.Location):
    id: UUID
    vulnerability_id: UUID
    vulnerability: base.Vulnerability


class Flag(base.Flag):
    id: UUID
    vulnerability_id: UUID
    vulnerability: base.Vulnerability


class Vulnerability(base.Vulnerability):
    vulnerability_identifier: base.VulnerabilityIdentifier
    security_report_id: Optional[UUID]
    security_report: Optional[base.SecurityReport]


class Scan(base.Scan):
    id: UUID
    analyzer_id: UUID
    scanner_id: UUID
    security_report_id: Optional[UUID]
    security_report: Optional[base.SecurityReport]


class Remediation(base.Remediation):
    id: UUID
    security_report_id: Optional[UUID]
    security_report: Optional[base.SecurityReport]


class VulnerabilityIdentifier(base.VulnerabilityIdentifier):
    vulnerability: base.Vulnerability
    remediation_id: Optional[UUID]
    remediation: Optional[base.Remediation]


class SecurityReport(base.SecurityReport):
    id: UUID
    report_schema: Optional[str] = Field(
        default="https://gitlab.com/gitlab-org/security-products/security-report-schemas/-/blob/master/dist/sast-report-format.json",
        pattern=r'^https?://.+')
    job_id: int
    job: Job
    created_at: datetime
    updated_at: datetime
