import uuid
from sqlalchemy import Column, Enum, Integer, ForeignKey, String
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship

from app.database.db import Base
from app.database.schemas.workers_status import TaskStatuses
from app.database.models import mixin

task_statuses = Enum(*TaskStatuses.__args__, name="task_statuses")


class StatusScanJob(Base, mixin.TrackTime):
    __tablename__ = 'status_scan_jobs'
    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    db_get_job_task = Column(task_statuses, nullable=False, default="not_started")
    gitlab_get_related_files_task = Column(task_statuses, nullable=False, default="not_started")
    scan_run_task = Column(task_statuses, nullable=False, default="not_started")
    db_create_and_save_task = Column(task_statuses, nullable=False, default="not_started")
    gitlab_trigger_job_task = Column(task_statuses, nullable=False, default="not_started")
    overall_status = Column(task_statuses, nullable=False, default="not_started")
    remarks = Column(String, nullable=True)

    job_id = Column(Integer, ForeignKey('jobs.id'))
    job = relationship("Job", back_populates="status_scan_job")
