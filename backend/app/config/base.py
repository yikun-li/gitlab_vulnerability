from functools import lru_cache
from dotenv import find_dotenv, load_dotenv

from pydantic import Field
from pydantic_settings import BaseSettings, SettingsConfigDict


class Settings(BaseSettings):
    model_config = SettingsConfigDict()

    TESTING: int = Field(default=0, json_schema_extra={"env": "TESTING"})
    API_VERSION_PREFIX: str = Field(default="/api/v1")

    DB_USER: str
    DB_PASSWORD: str
    DB_NAME: str
    DB_HOST: str

    @property
    def DB_URL(self) -> str:
        """SQLAlchemy Database URL."""
        return f"postgresql://{self.DB_USER}:{self.DB_PASSWORD}@{self.DB_HOST}:5432/{self.DB_NAME}"

    @property
    def DB_NAME_TEST(self) -> str:
        return f"{self.DB_NAME}_test"

    @property
    def DB_URL_TEST(self) -> str:
        return f"{self.DB_URL}_test"

    # Gitlab settings
    GITLAB_BASE_API_URL: str
    GITLAB_ACCESS_TOKEN: str
    GITLAB_PIPELINE_TRIGGER_TOKEN: str

    # Model settings
    MODEL_PATH: str
    MODEL_GENERAL: str


@lru_cache
def get_settings():
    load_dotenv(find_dotenv(".env"))
    return Settings()


def clear_settings_cache():
    get_settings.cache_clear()
