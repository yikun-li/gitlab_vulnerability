from random import randint
from sqlalchemy.orm import Session
from faker import Faker

from app.database.crud.detection import (
    get_job_by_db_job_id,
    get_job_by_gl_job_id,
    create_job
)
from app.database.schemas import detection as schemas

from tests.factories.detection import JobFactory


def test_get_job_by_db_job_id(testing_db_session: Session) -> None:
    job = JobFactory()
    db_job = get_job_by_db_job_id(db=testing_db_session, db_job_id=job.id)

    attrs = [
        "id",
        "gl_project_dir",
        "gl_commit_sha",
        "gl_project_id",
        "gl_pipeline_id",
        "gl_job_id",
        "diff"
    ]

    for attr in attrs:
        assert getattr(db_job, attr) == getattr(job, attr)


def test_get_job_by_gl_job_id(testing_db_session: Session) -> None:
    job = JobFactory()
    db_job = get_job_by_gl_job_id(db=testing_db_session, gl_job_id=job.gl_job_id)

    attrs = [
        "id",
        "gl_project_dir",
        "gl_commit_sha",
        "gl_project_id",
        "gl_pipeline_id",
        "gl_job_id",
        "diff"
    ]

    for attr in attrs:
        assert getattr(db_job, attr) == getattr(job, attr)


def test_create_job(testing_db_session: Session) -> None:
    fake = Faker()
    job = schemas.JobCreate(
        gl_project_dir=f"{fake.file_path()}",
        gl_commit_sha=f"{fake.sha1()}",
        gl_project_id=f"{fake.random_number(digits=5)}",
        gl_pipeline_id=f"{fake.random_number(digits=5)}",
        gl_job_id=f"{fake.random_number(digits=5)}",
        diff=[f'{fake.file_path()}' for _ in range(randint(1, 10))]
    )
    db_job = create_job(db=testing_db_session, job=job)

    assert hasattr(db_job, "id")
    attrs = [
        "gl_project_dir",
        "gl_commit_sha",
        "gl_project_id",
        "gl_pipeline_id",
        "gl_job_id",
        "diff"
    ]

    for attr in attrs:
        assert getattr(db_job, attr) == getattr(job, attr)
