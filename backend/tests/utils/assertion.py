from typing import Any
from uuid import UUID

from app.database.db import Base


def assert_attributes(db_object: Base | dict[str, Any], attrs: dict[str, Any], excl: list[str] = []):
    for attr, tally_value in attrs.items():
        if attr in excl:
            continue

        db_value = None
        if isinstance(db_object, dict):
            db_value = db_object[attr]
        else:
            db_value = getattr(db_object, attr)

        if isinstance(db_value, list):
            for item in db_value:
                assert item in tally_value, f"{item=} does not exist in collection {tally_value=}"
        elif isinstance(db_value, UUID) or isinstance(tally_value, UUID):
            assert str(db_value) == str(tally_value)
        else:
            assert db_value == tally_value, f"{db_value=} not the same as {tally_value=}"
