import { BadgeAlert } from "lucide-react"

import {
  Alert,
  AlertDescription,
  AlertTitle,
} from "@/components/ui/alert"
import { Separator } from "@/components/ui/separator"

import { DataBadge } from "@/components/shared/badges/data-badge"
import {
  ICVSSVector,
  IIdentifier,
  IVulnerability
} from "@/types/report/security-report"

interface VulnerabilityAlertProps {
  vulnerability: IVulnerability
}

const VulnerabilityAlert = ({
  vulnerability
}: VulnerabilityAlertProps) => {

  const renderCVSSVectorBadges = (
    cvssVectors: ICVSSVector[] | undefined
  ) => {
    if (cvssVectors !== undefined) return (
      <div>
        <Separator />
        <div className="mt-1.5 mb-2">
          {cvssVectors.map((cvssVector) => (
            <DataBadge
              key={cvssVector.vector}
              badgeTitle={cvssVector.vector}
              badgeVariant="info"
              hoverBadgeContent={
                <div className="flex justify-between space-x-24">
                  <p>Vendor</p>
                  <p className="font-mono text-ellipsis whitespace-nowrap overflow-hidden">{cvssVector.vendor}</p>
                </div>
              }
            />
          ))}
        </div>
      </div>
    )
    return (
      <></>
    )
  }
    
  const renderIdentifierBadges = (
    identifiers: IIdentifier[]
  ) => {
    return (
      <div>
        <Separator />
        <div className="mt-1.5 mb-2">
          {identifiers.map((identifier) => (
            <DataBadge
              key={identifier.name}
              badgeTitle={identifier.name}
              badgeLink={
                identifier.url !== undefined
                  ? identifier.url
                  : `https://www.google.com/search?q=${identifier.name}`
              }
              badgeVariant="destructive"
            />
          ))}
        </div>
      </div>
    )
  }

  return (
    <Alert>
      <BadgeAlert className="h-4 w-4" />
      <AlertTitle>{vulnerability.name}</AlertTitle>
      <AlertDescription className="mt-3 leading-loose">
        <div className="my-2">{vulnerability.description}</div>
        {renderCVSSVectorBadges(vulnerability.cvss_vectors)}
        {renderIdentifierBadges(vulnerability.identifiers)}
      </AlertDescription>
    </Alert>
  )
}

export { VulnerabilityAlert }
