"use client"

import * as React from "react"
import Link from "next/link"
import { useRouter } from "next/navigation"
import { Menu, Search, Shrub, X } from "lucide-react"

import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import {
  Sheet,
  SheetContent,
  SheetFooter,
  SheetHeader,
  SheetTitle,
  SheetTrigger,
} from "@/components/ui/sheet"
import { cn } from "@/lib/utils"

import { ModeToggle } from "../shared/buttons/mode-toggle"
import { NAV_LINKS } from "@/constants/app/navigation"

const NavSheet = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => {
  const router = useRouter()
  const [isOpen, setIsOpen] = React.useState<boolean>(false)
  const [jobSearchValue, setJobSearchValue] = React.useState<string>("")
  
  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault()
    router.push(`/gl_job/${jobSearchValue}`)
    setIsOpen(false)
    setJobSearchValue("")
  }

  const renderLogo = () => {
    return <Shrub className="h-[1.2rem] w-[1.2rem]" />
  }

  const renderNavSheet = () => {
    return (
      <Sheet open={isOpen} onOpenChange={setIsOpen}>
        <SheetTrigger asChild>
          <Button variant="ghost" size="icon">
            {isOpen
              ? <X className="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all" />
              : <Menu className="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all" />
            }
          </Button>
        </SheetTrigger>
        <SheetContent side="bottom">
          <SheetHeader>
            <SheetTitle className="self-center">
              {renderLogo()}
            </SheetTitle>
          </SheetHeader>
          <div className="grid gap-4 py-4">
            {NAV_LINKS.map((link) => (
              <Button
                variant="outline"
                className="border-dashed"
                key={link.key}
                asChild 
                onClick={() => setIsOpen(false)}
              >
                <Link href={link.href}>
                  {link.title}
                </Link>
              </Button>
            ))}
            <form onSubmit={handleSubmit} className="grid gap-3 grid-cols-[1fr_40px]">
              <Input
                placeholder="Search for GitLab Job ID..."
                className="h-10 text-ellipsis"
                onChange={(e) => setJobSearchValue(e.target.value)}
                value={jobSearchValue}
              />
              <Button variant="outline" className="border-dashed" size="icon" type="submit">
                <Search className="h-4 w-4" />
              </Button>
            </form>
          </div>
          <SheetFooter className="mt-3">
            <ModeToggle />
          </SheetFooter>
        </SheetContent>
      </Sheet>
    )
  }

  return (
    <nav className={cn("sticky pt-5 pb-2.5 top-0 z-10", className)}>
      <div className="border border-dashed rounded-lg shadow-lg w-11/12 max-w-7xl m-auto bg-white dark:bg-slate-900">
        <div className="w-11/12 m-auto">
          <div className="flex items-center justify-between h-16">
            {renderLogo()}
            {renderNavSheet()}
          </div>
        </div>
      </div>
    </nav>
  )
}

export { NavSheet }