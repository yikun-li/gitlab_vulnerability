import React from "react"
import { CircleHelp } from "lucide-react"

import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip"

import { TypographyH2 } from "../typography/typography-h2"

interface PageTitleProps {
  title: string
  loadingTitle?: string
  isLoading?: boolean
  headingElement?: React.ElementType
  underline?: boolean
  tooltipValue?: string | undefined | React.ReactNode
  utilitySection?: undefined | React.ReactNode
}

const PageTitle = ({
  title,
  loadingTitle,
  isLoading,
  headingElement: HeadingElement = TypographyH2,
  underline = true,
  tooltipValue = undefined,
  utilitySection = undefined,
}: PageTitleProps) => {
  
  const renderHeadingElement = () => {
    if (isLoading && loadingTitle) return (
      <HeadingElement>
        <div className="flex">
          {loadingTitle}
          <div className="animate-bounce ml-2 mb-1.5 inline-flex self-end justify-self-center h-2 w-2 rounded-full bg-current"></div>
          <div className="animate-bounce delay-100 ml-1 mb-1.5 inline-flex self-end justify-self-center h-2 w-2 rounded-full bg-current"></div>
          <div className="animate-bounce delay-200 ml-1 mb-1.5 inline-flex self-end justify-self-center h-2 w-2 rounded-full bg-current"></div>
        </div>
      </HeadingElement>
    )

    return (
      <HeadingElement>
        {title}
      </HeadingElement>
    )
  }

  if (tooltipValue !== undefined) {
    return (
      <div className={`${underline? "border-b" : ""} flex justify justify-between`}>
        <div className="flex">
          {renderHeadingElement()} 
          <TooltipProvider>
            <Tooltip>
              <TooltipTrigger>
                <CircleHelp className="size-4 mb-5 ml-1"/>
              </TooltipTrigger>
              <TooltipContent>
                {tooltipValue}
              </TooltipContent>
            </Tooltip>
          </TooltipProvider>
        </div>
        {utilitySection}
      </div>
    )
  }

  return (
    <div className={`${underline? "border-b" : ""} flex justify justify-between`}>
      {renderHeadingElement()}
      {utilitySection}
    </div>
  )
}

export { PageTitle }
