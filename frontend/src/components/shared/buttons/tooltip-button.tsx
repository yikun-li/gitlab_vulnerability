import Link from "next/link"
import { LucideIcon } from "lucide-react"

import { Button } from "@/components/ui/button"
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip"

interface TooltipButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  tooltipValue: string
  buttonValue?: string
  isIconButton?: boolean
  icon?: undefined | LucideIcon
  isLink?: boolean,
  href?: undefined | string
  buttonVariant?: "default" | "outline" | "secondary" | "ghost"
}

const TooltipButton = ({
  tooltipValue,
  buttonValue = "",
  isIconButton = false,
  icon: Icon = undefined,
  isLink = false,
  href = undefined,
  buttonVariant = "ghost",
  ...props
}: TooltipButtonProps) => {
  const renderButton = () => {
    if (isLink && href !== undefined) {
      return (
        <Button variant={buttonVariant} className="h-8 w-8 p-0" {...props}>
          <Link href={href}>
            {isIconButton && Icon !== undefined
              ? <Icon className="size-4" />
              : buttonValue
            }
          </Link>
        </Button>
      )
    }

    return (
      <Button variant={buttonVariant} className="h-8 w-8 p-0" {...props}>
        {isIconButton && Icon !== undefined
          ? <Icon className="size-4" />
          : buttonValue
        }
      </Button>
    )
  }

  return (
    <TooltipProvider>
      <Tooltip>
        <TooltipTrigger asChild>
          {renderButton()}
        </TooltipTrigger>
        <TooltipContent>
          {tooltipValue}
        </TooltipContent>
      </Tooltip>
    </TooltipProvider>
  )
}

export { TooltipButton }
